@model IEnumerable<RPGSite.Models.Posts>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@helper Truncate(string input, int length)
{
if (input.Length <= length)
{
        @input
}
else
{
        @input.Substring(0, length)<text>...</text>
}
}
@if (User.Identity.IsAuthenticated)
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.User.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Created)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.User.UserName)
        </td>
        <td>
            @Html.ActionLink(item.Title, "Details", new { id = item.ID })
        </td>
        <td>
            @Truncate(item.Description, 25)
        </td>
        <td>
            @if (item.Updated == null)
            {
                @Html.DisplayFor(modle => item.Created)
            }
            else
            {
                @Html.DisplayFor(modle => item.Updated)
            }
        </td>
        @if (User.IsInRole("Admin") || User.Identity.Name == item.User.UserName)
        {
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        }
    </tr>
}

</table>
