@model RPGSite.ViewModels.PostDetailViewModel

@{
    ViewBag.Title = "Details";
}

<h2>@ViewBag.Title</h2>

<article>
    <h2 class="title">
        @Html.DisplayFor(model => model.Post.Title)
        @if (User.IsInRole("Admin"))
            {
            <font size="2">
                @Html.ActionLink("Edit", "Edit", new { id = Model.Post.ID })
            </font>
        }
    </h2>
    <p class="author">@Html.DisplayNameFor(model => model.Post.User): @Html.DisplayFor(modelItem => modelItem.Post.User.UserName)</p>
    <p class="date">
        Date:
        @if (Model.Post.Updated == null)
        {
            @Html.DisplayFor(model => model.Post.Created)
        }
        else
        {
            @Html.DisplayFor(model => model.Post.Updated)
        }
    </p>
    <p class="description">@Html.DisplayFor(model => model.Post.Description)</p>
    @Html.ActionLink("Back to List", "Index")
</article>
<hr />

<div>
    <h4>Comments</h4>
    <hr />
    @if (Model.Comments.Count < 1)
    {
        <p>No comments yet. Be the first one to comment this post!</p>
    }
    @foreach (var comment in Model.Comments)
    {
        <h4>@comment.User.UserName</h4>
        <p>
            @comment.Comment
            @if (User.IsInRole("Admin"))
            {
                @Html.ActionLink("Delete", "DeleteComment", new { id = comment.ID })
            }
        </p>
        <br />
    }
</div>

@if (User.Identity.IsAuthenticated)
{
    <hr />
    using (Html.BeginForm("AddComment", "Posts", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <h5>Add a comment</h5>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Comment.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comment.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment.Comment, "", new { @class = "text-danger" })
                <p class="text-danger">@ViewBag.Error</p>
            </div>
        </div>

        @Html.HiddenFor(model => model.Comment.PostID)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default">
            </div>
        </div>
    }
}
<hr />